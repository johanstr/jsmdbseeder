#!/usr/bin/env php
<?php

@include "./vendor/autoload.php";

$seedfile = 'database';
$connectionfile = 'dbconnection';

if(count($argv) > 1) {
    $arguments = $argv;
    array_shift($arguments);
    
    foreach($arguments as $index => $arg) {
        switch($arg) {
            case '-h':
                colorLog('JSMDBSeeder Version 1.01', 'l');
                colorLog('');
                colorLog('Usage:');
                colorLog('     php jsmdbseeder [-s seedfile [-c configfile]]', 'w');
                colorLog('');
                colorLog('     [seedfile]       .PHP filename (without extension)');
                colorLog('                       Default is database for database.php');
                colorLog('                       Seed files need to be in folder config.');
                colorLog('     [configfile]     .PHP filename (without extension)');
                colorLog('                      Database connection configuration.');
                colorLog('                      Default is dbconnection for dbconnection.php');
                colorLog('                      Connection files need to be in folder config.');
                colorLog('');
                exit();

            case '-s':
                $seedfile = $arguments[$index + 1];
                break;

            case '-c':
                $connectionfile = $arguments[$index + 1];
                break;
        }
    }
}

$config = include "./config/$connectionfile.php";
$tables = include "./config/$seedfile.php";

$db = new App\Database\Database($config);
$factory = new App\FactoryProcessor\FactoryProcessor();

$data_tables = [];
$recnum = 1;
colorLog('JSMDBSeeder Version 1.01', 'l');
colorLog("Using seederfile: $seedfile", 'w');
colorLog("Using connection file: $connectionfile", 'w');
foreach($tables as $table => $columns) {
    
    $table_info = explode(':', $table);
    $table_name = $table_info[0];
    $amount = intval($table_info[1]);

    colorLog("SEEDING RECORDS FOR TABLE: $table_name", 'i');
    for($i = 0; $i < $amount; $i++) {
        $record = $factory->process($columns);
        $db->insert($table_name, $record);
        print_record($record);
        $recnum++;
        $data_tables[$table_name][] = $record;
    }
    
    $recnum = 1;
}
colorLog('End of seeding', 's');


function print_record($record)
{
    global $recnum;

    $line = '';
    $first = true;

   $line .= "RECORD NR.: $recnum | ";
    foreach($record as $column_name => $value) {
        if($first) {
            $first = false;
            $line .= "$column_name : $value";
        } else 
            $line .= ", $column_name : $value";

    }

    echo $line . PHP_EOL;
}

function colorLog($str, $type = 'n'){
    switch ($type) {
        case 'e': //error
            echo "\033[31m$str \033[0m\n";
            break;
        case 's': //success
            echo "\033[32m$str \033[0m\n";
            break;
        case 'w': //warning
            echo "\033[33m$str \033[0m\n";
            break;  
        case 'i': //info
            echo "\033[36m$str \033[0m\n";
            break;  
        case 'l':
            echo "\033[95m$str \033[0m\n";  
            break;  
        default:
            echo $str.PHP_EOL;
            break;
    }
}